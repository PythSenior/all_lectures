'''логические выражения  опкраторы Python'''

'''Boolean'''
# неизменяемыый тип данных
# True/False


    # print(bool(0)) #False
    # print(bool(2)) #True
    # print(bool(False)) #False
    # print(bool('False')) #True
    # print(bool(' ')) #True



'''Лошические выражения -> выражения,
   которые возвращают Boolean Type'''

#Логические операторы

# == -> сравнение
# 5 == 5 # True
# 4 == 6 # False
# '5' == 5 # False


# # != -> не равно 
# 5 != 5 # False
# 6 != 4 # True

# # > (больше)
# 5 > 2 # True
# 6 > 9 # False
# 5 > 5 # False

# # < (меньше)
# 3 < 4 # True
# 3 < 1 # False
# 3 < 3 # False

# # >= -> больше или равно
# 6 >= 5 # True
# 6 >= 6 # True
# 6 >= 9 # False 

# # <= -> меньше или равно 
# 4 <= 3 # False
# 4 <= 5 # True
# 4 <= 4 # True

'''and or not'''
# and -> логическое и
# or -> логическое или 
# not -> логическое отрицание 

# and Используется для обьединения 
# or       логических выражений 

# a = 5
# b = 6

# a == 5 and b == 6 # True
# a == 4 and b == 6 # False
# a == 3 and b == 9 # False

# # если вспе чатси выражения возвращают True, то все выражения возвращает True 
# # если хотя бы одна часть выражения возвращает  False -> False 

# a == 5 or b == 6 # True
# a == 4 or b == 6 # True
# a == 4 or b == 9 # False

# # если хотя бы одна часть выражения возвращает True,
# #  то все выражения возвращает True 

# not True # False 
# not False # True 

# not a == 5 # False
# not b == 7 # True

'''опкраторы индетификации'''
# 1. in -> проверяет наличие элемента 
# 2. сравнения
# == -> по значению 
# is -> по ячейке памяти 
# 3ю is not -> отрицательное сравнение ячеек 

'''====== None Type======'''
# неизменямый тип данных с одним значением 
# None. используется для обозначения пустых значений 

# bool(None) # False 
# bool('None ') # True

# a = None 
# print(a == None )


'''======= условные операторы ======='''
# нужныб для того, чтобы при разных входных 
# данных код выполняются по разному 

#if условие:
   
# тело будет работать, если условие True (верно)

#if условие1:
#     тело1
# #elif условие2: 
#     тело2
# #else:
#     тело3


# тело1 будет работать если условие 1 верно,
# тело ->  если условие 1 не верно (во всех других случаях)


# age = int(input('Введите свой возраст: '))
# if age >= 18:
#     print('ok')
# else:
#     print('go away')

# number = int(input('Введите число: '))
# if number > 0:
#     print(f'{number} negative')
# elif number < 0:
#     print(f'{number} negative')
# else:
#     print(f'{number} zero')

'''Тернарные операторы '''
# условие в одну строку/ if else в одну строку 

# синтаксис
# тело1 if условие else тело2

# num = 9
# result = 'hello' if num == 9 else 'world'
# print(result)

'''========= Маржовые операторы ========='''

# позволяет нам как присваивать значение, так и возвращать его в одном выражении

# print(hello := 'hello')

# num = int(input('Напишите число'))
# if num % 2 == 0:
#     print('четное')
# else:
#     print('нечетное')







