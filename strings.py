'''===== Строки ======'''
# неизмениямый тип данных который, 
# предназначен для хранения последовательности
#символов, хаключенноц в одинарные или двойные кавычки


# string = "Строка"
# string2 = 'строка'
# # string3 = "неправильно"
# string4 = "don't"
# string5 = 'he:"hello"'

# string = '''hello
# rgrg
# grgrgr
# grgrgr
# '''
# string7 = """
# hello omigo
# vv
# rv
# rvrvrv
# rv
# """
'''Экранированные последовательности'''
# последовательность символов, начинающаяся 
'\n' # перенос на следующую строку
'\t' # табуляция 
'\\' # для отображения 
'\v' # вертикальная табуляция
'\r' # возвращает каретку в начало строки 
#


'''конкатенация -> склеивание строк'''
# str_1 = 'hello'
# str_2 = 'world'

# print(str_1 + ' ' + str_2)


'''дублирование строк'''
# print(str_1, str_1, str_1)
# print(str_1*100)


'''форматирование строк'''
# 1. с испольщование %
# 2. с использованием метода .format()
# 3. интерполяция строк (f-строки)

# %
# name = input('Enter your name ')
# age = input('Enter you age' ) 
# test = input('Enter you age')
# result = f'hello {name} your are{age}
# years old {test} '

'''======== Индексы ========'''
# порядочный номер символов в строке
'hello world'
# 0 1 2 3 4 5 6 7 8 9 10
# -11-10-9-8-7-6-5-4-3-2-1
# str_ = 'hello world test hello'
# print(str_[0]) #для получения первого элемента строки

# str_[1] # 'e'
# str_[-1 ] #получение последнего элемента строки 'd'


'''======= Срезы ======='''
# # получениу подстраки (какой то части строки)
# # Синтаксис [начало : в конце : шаг]
# #print(str_[:5])
# #print(str_[6:])
# #print(str_[:-2])


# 'переверните строку '
# '''
# пример: str_= 'hello'
# вывод 'olleh'
# '''

# str="hello" 
# print(str_[::-1])

# ''' =======Методы строк======= '''
# # метод - та же


# hashtags = '#makers#bootcamp#программирование#it#курсы'
# print(lstrip('#', ' '))